#!__BASH__

OUTPUT=/dev/stdout
LOG=$(mktemp /tmp/logbitextorwebdir2ett.XXXXXX)
TEMPCONV=$(mktemp /tmp/tempconv.XXXXX)

exit_program()
{
  echo "USAGE: $1 webdir"
  echo "WHERE"
  echo "   webdir   folder downloaded directories"
  exit 1
}

ARGS=$(getopt "h" $*)

set -- $ARGS
for i
do
  case "$i" in
    -h)
      exit_program $(basename $0)
      ;;
    --)
      shift
      break
      ;;
  esac
done

case $# in
  1)
    WEBDIR="$1"
    ;;
  *)
    exit_program $(basename $0)
    ;;
esac

tika_port=10000
while [ $(__LSOF__ -i :$tika_port | __WC__ -l) -ne 0 ]; do
    let tika_port=$tika_port+1;
done
__JAVA__ -jar __TIKA__ --xml -s $tika_port &
tika_pid=$!

# Código aquí

#
# 1. Eliminar ficheros repetidos -> (log)
# 2. Obtener tipo y codificación de ficheros
# 3. Quedarse solo con los que tengan tipo html
# 4. Convertir [no UTF-8 -> UTF-8], si hay error -> (log)
# 5. Corregir errores HTML usando Tidy y eliminar las cabeceras HTML
# 6. Incluir el contenido del fichero en base64
#
# Formato final del documento:
# encoding	mimetype	url	content(base_64)
#
# Genera .ett -> encoded and typed text
#

# Se busca en todo el directorio dado
find "$WEBDIR" | \
# Se pasan a md5
__PYTHON__ -c 'import sys
import hashlib
import os

for i in sys.stdin: 
  if os.path.isdir(i.strip()):
    continue
  file = open(i.strip(), "r")  # la i es el nombre del fichero
  c = hashlib.md5()
  for j in file:
    c.update(j)
  file.close()
  print "{0}\t{1}".format(c.hexdigest(), i.strip())' 2>> $LOG | \
# md5_fichero	nombre_fichero
# Se ordenan y se eliminan los repetidos
sort | __GAWK__ -v logfile="$LOG" '{
  if(var != $1)
    printf "\"" $2 "\"\n";    # nombre_fichero
  else 
    print "Eliminando repetido:\t" $0 >> logfile;
  var = $1;}' | \
# Se muestra el formato y tipo de todos los ficheros
xargs file --mime-type --mime-encoding | \
#grep text/html | \
__GAWK__ '{
  printf substr($1,1,length($1)-1);    # nombre_fichero
  printf "\t";
  printf substr($2,1,length($2)-1);    # formato: text/html etc.
  printf "\t"; 
  print substr($3,9,length($3));       # encoding
}' | \
#Se codifica el fichero en bas64 y se almacena.
__PYTHON__ -c '
import sys
import os
import base64
import socket
from boilerpipe.extract import Extractor

# Para cada fichero le pasamos el tidy y lo convertimos en base64

for i in sys.stdin:
  campos = i.split("\t")
  file = open(campos[0], "r")
  file_output=""

  extractor = Extractor(extractor="ArticleExtractor", html=file.read())
  sys.stderr.write(extractor.getHTML().encode("utf-8"))

  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect(("localhost", '$tika_port'))
  s.sendall(extractor.getHTML().encode("utf-8"))
  s.shutdown(socket.SHUT_WR)
  while 1:
    data = s.recv(1024)
    if data == "":
      break
    else:
      file_output=file_output+data
  s.close()

  e = base64.b64encode(file_output)
  file.close()

  #Por último, guardamos los datos en un mismo fichero con el formato: encoding   formato   nombre_fichero   base64
  print "{0}\t{1}\t{2}\t{3}".format(campos[2].strip(),campos[1],os.path.relpath(campos[0],sys.argv[1]),e)' $WEBDIR > $OUTPUT 2>> $LOG

rm -Rf $TEMPCONV 2>> $LOG

__KILL__ $tika_pid
