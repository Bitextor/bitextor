#!__BASH__

INPUT=/dev/stdin
OUTPUT=/dev/stdout
FILE=""
URL=""
DIRNAME="web"
#LETT=$(mktemp /tmp/lett.XXXXXX)
LETTR=$(mktemp /tmp/lettr.XXXXXX)
INDEX=$(mktemp /tmp/idx.XXXXXX)
RINDEX1=$(mktemp /tmp/ridx.XXXXXX)
RINDEX2=$(mktemp /tmp/ridx.XXXXXX)
LANG1=""
LANG2=""
#DIC=""
#ETT="temp.ett"
#ALIGN="temp.align"
#INDEX=$(mktemp /tmp/idx.XXXXXX)
#RINDEX2="temp.ridx2"
#MAXLINES=5
#MINQUALITY=0
#BYTEXT=0

exit_program()
{
  #echo "USAGE: $1 [-d dirname] [-l file] [-i index] [-r revindex] [-m max_lines]"
  #echo "          [-q min_quality] [url] lang1 lang2"
  echo "USAGE: $1 [-f file] [-d dirname] [-l lett] [-t lettr] [-r revindex] [url] lang1 lang2"
  echo "WHERE"
  echo "  -f file         web addresses to crawl (one per line)"
  echo "  -d dirname      folder to store downloaded directories (web/ by default)"
#  echo "  -l lett         file with extension .lett (language encoded and typed data)"
#  echo "                  (/tmp/lett.XXXXXX by default)"
  echo "  -t lettr        file with extension .lettr (language encoded and typed data"
  echo "                  with \'raspa\') (/tmp/lettr.XXXXXX by default)"
  #echo "  -n index        file with extenxion .idx (index document) (temp.idx by default)"
  echo "  -r revindex     file with extension .ridx (reverse index) (/tmp/lettr.XXXXXX"
  echo "                  by default)"
  #echo "  -i dictionary   file with extension .dic Dictionary with pair of selected"
  #echo "                  languages. (installed dictionary at"
  #echo "                  /usr/local/share/bitextor/diccionario.dic by default)"
  #echo "  -m max_lines    clean texts (clean lines by default) and specify"
  #echo "                  maximum number of lines out of alignment (5 by default)"
  #echo "  -q min_quality  minimum quality required for each line (0 by default)"
  echo "  url             web address to crawl. If this parameter is not specified,"
  echo "                  it runs over the directory."
  echo "  lang1           selected language with two letters code: en, es, fr, de ..."
  echo "  lang2           selected language with two letters code: en, es, fr, de ..."
  #echo "  dictionary      file with extension .dic (dictionary with pair of selected"
  #echo "                  languages)"
  exit 1
}

ARGS=$(getopt "f:d:l:t:r:h" $*)

set -- $ARGS
for i
do
  case "$i" in
     -f)
      shift
      FILE=$1
      shift
      ;;
     -d)
      shift
      DIRNAME=$1
      shift
      ;;
#    -l)
#      shift
#      LETT=$1
#      shift
#      ;;
#    -n)
#      shift
#      INDEX=$1
#      shift
#      ;;
#    -i)
#      shift
#      DIC=$1
#      shift
#      ;;
    -t)
      shift
      LETTR=$1
      shift
      ;;
    -r)
      shift
      RINDEX1=$1
      RINDEX2=$1
      shift
      ;;
#    -m)
#      shift
#      MAXLINES=$1
#      BYTEXT=1
#      shift
#      ;;
#    -q)
#      shift
#      MINQUALITY=$1
#      shift
#      ;;
    -h)
      exit_program $(basename $0)
      ;;
    --)
      shift
      break
      ;;
  esac
done

case $# in
  3)
    URL="$1"
    LANG1="$2"
    LANG2="$3"
    ;;
  2)
    LANG1="$1"
    LANG2="$2"
    ;;
  *)
    exit_program $(basename $0)
    ;;
esac

# Código aquí

if !(test -z $URL);
then
  __PREFIX__/bin/bitextor-downloadweb $URL $DIRNAME
fi
if !(test -z $FILE);
then
  cat $FILE | \
  while read line;
  do
    __PREFIX__/bin/bitextor-downloadweb $line $DIRNAME
  done
fi

__PREFIX__/bin/bitextor-webdir2ett $DIRNAME | \
__PREFIX__/bin/bitextor-ett2lett | \
__PREFIX__/bin/bitextor-lett2lettr > $LETTR
__PREFIX__/bin/bitextor-lett2idx $LETTR > $INDEX
__PREFIX__/bin/bitextor-idx2ridx $LANG1 $LANG2 $INDEX | \
__PREFIX__/bin/bitextor-lett2idx $LETTR > $RINDEX1
__PREFIX__/bin/bitextor-idx2ridx $LANG2 $LANG1 $INDEX | \
__PREFIX__/bin/bitextor-lett2idx $LETTR > $RINDEX2
__PREFIX__/bin/bitextor-combineridx $RINDEX1 $RINDEX2 | __CUT__ -f 1,2 | __GREP__ ':' | __CUT__ -d ':' -f 1 | \
/usr/bin/python -c '
import sys

documentos={}

file = open(sys.argv[1],"r")

contador = 1
for j in file:
  campos = j.strip().split()
  if len(campos) > 4:
    documentos[contador] = campos[3] + "\t" + campos[4]
  contador=contador+1

for i in sys.stdin:
  campos = i.strip().split("\t")
  print str(documentos[int(campos[0])]) + "\t" + str(documentos[int(campos[1])])
' $LETTR > $OUTPUT

rm -Rf $LETTR $RINDEX1 $RINDEX2 $INDEX

