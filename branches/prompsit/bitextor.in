#!__BASH__

INPUT=/dev/stdin
OUTPUT=/dev/stdout
FILE=""
URL=""
DIRNAME="web"
#Path to default dictionary: it can be replaced by using option -v
VOCABULARY="__PREFIX__/share/bitextor/diccionario.dic"
#LETT=$(mktemp /tmp/lett.XXXXXX)
LETTR=$(mktemp /tmp/lettr.XXXXXX)
RINDEX=$(mktemp /tmp/ridx.XXXXXX)
LOGDIR=$(mktemp -d /tmp/bitextorlogs.XXXXXX)
LANG1=""
LANG2=""
#DIC=""
#ETT="temp.ett"
#ALIGN="temp.align"
#INDEX=$(mktemp /tmp/idx.XXXXXX)
#RINDEX2="temp.ridx2"
#MAXLINES=5
#MINQUALITY=0
#BYTEXT=0

exit_program()
{
  #echo "USAGE: $1 [-d dirname] [-l file] [-i index] [-r revindex] [-m max_lines]"
  #echo "          [-q min_quality] [url] lang1 lang2"
  echo "USAGE: $1 [-f file] [-d dirname] [-l lett] [-t lettr] [-r revindex] [-b] [-v vocabulary] [url] lang1 lang2"
  echo "WHERE"
  echo "  -f file         web addresses to crawl (one per line)"
  echo "  -d dirname      folder to store downloaded directories (web/ by default)"
#  echo "  -l lett         file with extension .lett (language encoded and typed data)"
#  echo "                  (/tmp/lett.XXXXXX by default)"
  echo "  -t lettr        file with extension .lettr (language encoded and typed data"
  echo "                  with \'raspa\') (/tmp/lettr.XXXXXX by default)"
  #echo "  -n index        file with extenxion .idx (index document) (temp.idx by default)"
  echo "  -r revindex     file with extension .ridx (reverse index) (/tmp/rindex.XXXXXX"
  echo "                  by default)"
  echo "  -b              if this option is enabled, the document alignment is run in both directions and only those documents been chosen as first option mutually are accepted"
  echo "  -s              if this option is enabled, all the intermediate files are stored in the directory specified for this"
  echo "  -v vocabulary   option for using a custom multilingual vocabulary for preliminar document alignment. The vocabulary must be a tab-separated file, in which the first line containains the names of the languages corresponding to each column, and the rest of the lines must contain the same word translated to all these languages."
  #echo "  -i dictionary   file with extension .dic Dictionary with pair of selected"
  #echo "                  languages. (installed dictionary at"
  #echo "                  /usr/local/share/bitextor/diccionario.dic by default)"
  #echo "  -m max_lines    clean texts (clean lines by default) and specify"
  #echo "                  maximum number of lines out of alignment (5 by default)"
  #echo "  -q min_quality  minimum quality required for each line (0 by default)"
  echo "  url             web address to crawl. If this parameter is not specified,"
  echo "                  it runs over the directory."
  echo "  lang1           selected language with two letters code: en, es, fr, de ..."
  echo "  lang2           selected language with two letters code: en, es, fr, de ..."
  #echo "  dictionary      file with extension .dic (dictionary with pair of selected"
  #echo "                  languages)"
  exit 1
}

BIDIDOCALIGN=0

ARGS=$(getopt "v:f:d:l:t:r:h:b:s:" $*)

set -- $ARGS
for i
do
  case "$i" in
     -f)
      shift
      FILE=$1
      shift
      ;;
     -d)
      shift
      DIRNAME=$1
      shift
      ;;
#    -l)
#      shift
#      LETT=$1
#      shift
#      ;;
#    -n)
#      shift
#      INDEX=$1
#      shift
#      ;;
#    -i)
#      shift
#      DIC=$1
#      shift
#      ;;
    -t)
      shift
      LETTR=$1
      shift
      ;;
    -r)
      shift
      RINDEX=$1
      shift
      ;;
    -v)
      shift
      VOCABULARY=$1
      shift
      ;;
    -b)
      shift
      BIDIDOCALIGN=$1
      shift
      ;;
    -s)
      shift
      INTERMEDIATE_DUMP=$1
      shift
      ;;
#    -m)
#      shift
#      MAXLINES=$1
#      BYTEXT=1
#      shift
#      ;;
#    -q)
#      shift
#      MINQUALITY=$1
#      shift
#      ;;
    -h)
      exit_program $(basename $0)
      ;;
    --)
      shift
      break
      ;;
  esac
done

case $# in
  3)
    URL="$1"
    LANG1="$2"
    LANG2="$3"
    ;;
  2)
    LANG1="$1"
    LANG2="$2"
    ;;
  *)
    exit_program $(basename $0)
    ;;
esac

# Código aquí

if !(test -z $URL);
then
  __PREFIX__/bin/bitextor-downloadweb $URL $DIRNAME
fi
if !(test -z $FILE);
then
  cat $FILE | \
  while read line;
  do
    __PREFIX__/bin/bitextor-downloadweb $line $DIRNAME
  done
fi

__PREFIX__/bin/bitextor-webdir2ett $DIRNAME 2> $LOGDIR/bitextorwebdir2ett.log | \
__PREFIX__/bin/bitextor-ett2lett -l ${LANG1},$LANG2 2> $LOGDIR/bitextorett2lett.log | \
__PREFIX__/bin/bitextor-lett2lettr 2> $LOGDIR/bitextorlett2lettr.log > $LETTR

if [ $BIDIDOCALIGN -ge 1 ]; then
  #Named pipe for paralelising obtaining the initial index for the ridx 1
  index_pipe1=$(mktemp /tmp/index_pipe.XXXXXX)
  rm $index_pipe1
  mkfifo $index_pipe1

  #Named pipe for paralelising obtaining the initial index for the ridx 2
  index_pipe2=$(mktemp /tmp/index_pipe.XXXXXX)
  rm $index_pipe2
  mkfifo $index_pipe2

  __PREFIX__/bin/bitextor-lett2idx $LETTR 2> $LOGDIR/bitextorlett2idx.log | \
  tee $index_pipe1 > $index_pipe2 &

  RINDEX1=$(mktemp /tmp/ridx.XXXXXX)
  RINDEX2=$(mktemp /tmp/ridx.XXXXXX) 

  __PREFIX__/bin/bitextor-idx2ridx -d $VOCABULARY $LANG1 $LANG2 < $index_pipe1 2> $LOGDIR/bitextoridx2ridx_$LANG1-$LANG2.log | \
  __PREFIX__/bin/bitextor-distancefilter $LETTR 2> $LOGDIR/bitextordistancefilter_$LANG1-$LANG2.log > $RINDEX1 &

  rindex1_pid=$!

  __PREFIX__/bin/bitextor-idx2ridx -d $VOCABULARY $LANG2 $LANG1 < $index_pipe2 2> $LOGDIR/bitextoridx2ridx_$LANG2-$LANG1.log | \
  __PREFIX__/bin/bitextor-distancefilter $LETTR 2> $LOGDIR/bitextordistancefilter_$LANG2-$LANG1.log > $RINDEX2

  wait $rindex1_pid

  rm $index_pipe1 $index_pipe2

  __PREFIX__/bin/bitextor-align-documents -l $LETTR -n $BIDIDOCALIGN $RINDEX1 $RINDEX2 2> $LOGDIR/bitextoraligndocuments.log | \
  __PREFIX__/bin/bitextor-align-segments --lang1 $LANG1 --lang2 $LANG2 2> $LOGDIR/bitextoralignsegments.log | \
  __PREFIX__/bin/bitextor-cleantextalign 2> $LOGDIR/bitextorcleantextalign.log > $OUTPUT

  rm $RINDEX1 $RINDEX2
else
  __PREFIX__/bin/bitextor-lett2idx $LETTR 2> $LOGDIR/bitextorlett2idx.log | \
  __PREFIX__/bin/bitextor-idx2ridx -d $VOCABULARY $LANG1 $LANG2 2> $LOGDIR/bitextoridx2ridx.log | \
  __PREFIX__/bin/bitextor-distancefilter $LETTR 2> $LOGDIR/bitextordistancefilter.log | \
  __PREFIX__/bin/bitextor-align-documents -l $LETTR 2> $LOGDIR/bitextoraligndocuments.log | \
  __PREFIX__/bin/bitextor-align-segments --lang1 $LANG1 --lang2 $LANG2 2> $LOGDIR/bitextoralignsegments.log | \
  __PREFIX__/bin/bitextor-cleantextalign 2> $LOGDIR/bitextorcleantextalign.log > $OUTPUT
fi

rm -Rf $LETTR $RINDEX

#__PREFIX__/bitextor-downloadweb $URL $DIRNAME
#__PREFIX__/bitextor-webdir2ett $DIRNAME > $ETT
#__PREFIX__/bitextor-ett2lett $ETT > $LETT
#__PREFIX__/bitextor-lett2idx $LETT > $INDEX
#__PREFIX__/bitextor-idx2ridx $INDEX $DIC $LANG1 $LANG2 > $RINDEX
#__PREFIX__/bitextor-lett2lettr $LETT > $LETTR
#__PREFIX__/bitextor-distancefilter $LETTR $RINDEX > $RINDEX2
#__PREFIX__/bitextor-aligner $LETTR $RINDEX2 $LANG1 $LANG2 > $ALIGN
#__PREFIX__/bitextor-cleantextalign $ALIGN -m $MAXLINES -q $MINQUALITY > $OUTPUT

#__PREFIX__/bin/bitextor-webdir2ett $DIRNAME | \
#__PREFIX__/bin/bitextor-ett2lett > $LETT
#__PREFIX__/bin/bitextor-lett2idx $LETT | \
#__PREFIX__/bin/bitextor-idx2ridx $LANG1 $LANG2 > $RINDEX
#__PREFIX__/bin/bitextor-lett2lettr $LETT > $LETTR
#__PREFIX__/bin/bitextor-distancefilter $LETTR $RINDEX | \
#__PREFIX__/bin/bitextor-aligner $LETTR $LANG1 $LANG2 | \
#__PREFIX__/bin/bitextor-cleantextalign > $OUTPUT

