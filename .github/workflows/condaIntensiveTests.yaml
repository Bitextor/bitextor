name: Intensive tests with conda
on:
   schedule:
      - cron: '0 3 * * 0'
   workflow_dispatch:
      inputs:
         conda_version:
            description: 'Version which will be looked for'
            required: false
            default: ''
         conda_build:
            description: 'Build which will be looked for'
            required: false
            default: ''
jobs:
   tests_mt:
      name: Tests MT
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x01
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_db:
      name: Tests dictionary based
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x02
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_gendic:
      name: Tests generate dictionary
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x04
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_genbicleaner:
      name: Tests generate bicleaner model
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x08
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_gendic_genbicleaner:
      name: Tests generate dictionary and bicleaner model
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x10
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_mt_db:
      name: Tests combining dictionaries and MT
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x20
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_others:
      name: Other tests
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      steps:
      -  name: Run
         run: |
            v=""
            if [[ "${{ github.event.inputs.conda_version }}" != "" ]]; then
               v="=${{ github.event.inputs.conda_version }}"

               if [[ "${{ github.event.inputs.conda_build }}" != "" ]]; then
                  v="${v}=${{ github.event.inputs.conda_build }}"
               fi
            fi

            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda create -y -n bitextor-tests
            conda activate bitextor-tests

            conda config --add channels conda-forge
            conda config --append channels bioconda
            conda config --append channels dmnapolitano
            conda config --append channels esarrias

            conda install -y -c bitextor "bitextor${v}"
            "${CONDA_PREFIX}/bitextor/run-tests.sh" -t 0x40
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
